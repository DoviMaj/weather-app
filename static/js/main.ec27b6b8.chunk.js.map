{"version":3,"sources":["components/Header.js","components/LocationInfo.js","components/SwitchButton.js","App.js","index.js"],"names":["Header","props","className","style","gap","fontSize","width","alt","src","cursor","onClick","getUserLocation","borderRadius","padding","placeholder","onKeyPress","e","key","target","value","getLocation","errorLoading","LocationInfo","useState","sunSetRise","setSunSetRise","useEffect","convertFromEcho","location","sys","sunrise","sunset","convertToFarenheits","v","Math","round","rise","set","Date","toLocaleTimeString","navigator","language","hour","minute","margin","name","country","degreeFormat","main","temp","weather","icon","feels_like","description","humidity","SwitchButton","onChange","toggleFormat","checked","type","display","color","zIndex","position","App","setLocation","setDegreeFormat","isLoading","setIsLoading","deviceLocation","setDeviceLocation","setErrorLoading","setHour","api","myInit","mode","myRequest","Request","a","fetch","response","ok","Error","json","data","console","error","setInterval","date","second","length","fetchResults","getInitialLocation","geolocation","getCurrentPosition","ps","coords","latitude","longitude","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec27b6b8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <div>\n      <div\n        className=\"align-center\"\n        style={{\n          gap: \"10px\",\n          fontSize: \"30px\",\n        }}\n      >\n        <img\n          style={{ width: \"60px\" }}\n          alt=\"app-logo\"\n          src=\"https://www.feirox.com/rivu/2016/04/Klara-1-1.png\"\n        ></img>\n        <p>Current Weather</p>\n      </div>\n      <br></br>\n      <div\n        className=\"align-center\"\n        style={{\n          gap: \"20px\",\n        }}\n      >\n        <img\n          style={{ cursor: \"pointer\", width: \"30px\" }}\n          alt=\"location access\"\n          onClick={() => props.getUserLocation()}\n          src=\"https://img.icons8.com/ios-filled/50/000000/marker.png\"\n        ></img>\n        <input\n          style={{ borderRadius: \"5px\", padding: \"5px\" }}\n          placeholder=\"city...\"\n          onKeyPress={(e) =>\n            e.key === \"Enter\" && e.target.value !== \"\"\n              ? props.getLocation(e)\n              : null\n          }\n        ></input>\n      </div>\n      <p className=\"not-found\">\n        {props.errorLoading ? \"Ops, something went wrong\" : null}\n      </p>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\n\nconst LocationInfo = (props) => {\n  const [sunSetRise, setSunSetRise] = useState([]);\n\n  useEffect(\n    () =>\n      convertFromEcho(props.location.sys.sunrise, props.location.sys.sunset),\n    [props.location]\n  );\n\n  const getDegreeFormat = () => (props.degreeFormat ? \"째F\" : \"째C\");\n\n  const convertToFarenheits = (v) => Math.round((v * 9) / 5) + 32;\n\n  const convertFromEcho = (rise, set) => {\n    setSunSetRise([\n      new Date(rise * 1000).toLocaleTimeString(navigator.language, {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }),\n      new Date(set * 1000).toLocaleTimeString(navigator.language, {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }),\n    ]);\n  };\n\n  return (\n    <div className=\"location-info\">\n      <div\n        className=\"align-center\"\n        style={{\n          gap: \"20px\",\n          fontSize: \"40px\",\n          margin: \"0px\",\n        }}\n      >\n        <p style={{ margin: 0 }}>\n          {props.location.name}, {props.location.sys.country}\n        </p>\n        <img\n          alt=\"flag\"\n          src={`https://www.countryflags.io/${props.location.sys.country}/flat/64.png`}\n        ></img>\n      </div>\n      <div>\n        <p\n          className=\"align-center\"\n          style={{\n            fontSize: \"30px\",\n          }}\n        >\n          {props.degreeFormat\n            ? convertToFarenheits(Math.round(props.location.main.temp))\n            : Math.round(props.location.main.temp)}\n          {props.degreeFormat ? \"째F\" : \"째C\"}\n\n          <img\n            alt=\"weather-icon\"\n            src={`http://openweathermap.org/img/wn/${props.location.weather[0].icon}@2x.png`}\n          ></img>\n        </p>\n        <p>\n          Feels like{\" \"}\n          {props.degreeFormat\n            ? convertToFarenheits(Math.round(props.location.main.feels_like))\n            : Math.round(props.location.main.feels_like)}\n          {getDegreeFormat()} | {props.location.weather[0].description} |\n          Humidity: {props.location.main.humidity}%\n        </p>\n        <p>\n          Sunrise: {sunSetRise[0]} | Sunset: {sunSetRise[1]}\n        </p>\n        <p></p>\n        <br></br>\n      </div>\n    </div>\n  );\n};\n\nexport default LocationInfo;\n","import React from \"react\";\n\nconst SwitchButton = (props) => {\n  return (\n    <div className=\"align-center\">\n      <label className=\"switch\">\n        <input\n          onChange={() => props.toggleFormat()}\n          checked={props.degreeFormat}\n          type=\"checkbox\"\n        ></input>\n        <span className=\"slider round align-center\">\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"20px\",\n              color: \"black\",\n              zIndex: 2,\n              position: \"relative\",\n              fontSize: \"12px\",\n            }}\n          >\n            <span>C</span>\n            <span>F</span>\n          </div>\n        </span>\n      </label>\n    </div>\n  );\n};\n\nexport default SwitchButton;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport LocationInfo from \"./components/LocationInfo\";\nimport SwitchButton from \"./components/SwitchButton\";\n\nfunction App() {\n  const [location, setLocation] = useState({});\n  const [degreeFormat, setDegreeFormat] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [deviceLocation, setDeviceLocation] = useState([]);\n  const [errorLoading, setErrorLoading] = useState(false);\n  const [hour, setHour] = useState(\"\");\n\n  const api = (v) =>\n    `https://api.openweathermap.org/data/2.5/weather?q=${v}&appid=3069ae2718e40f8dc1998b7250e16f10&units=metric`;\n  const myInit = { mode: \"cors\" };\n  const myRequest = (v) => new Request(api(v), myInit);\n\n  const toggleFormat = () => setDegreeFormat(!degreeFormat);\n\n  // clock on bottom of app\n  setInterval(() => {\n    var date = new Date();\n    setHour(\n      date.toLocaleTimeString(navigator.language, {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n      })\n    );\n  }, 1000);\n\n  // gets location from device\n  function getUserLocation() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const ps = [\n        Math.round(position.coords.latitude),\n        Math.round(position.coords.longitude),\n      ];\n      setDeviceLocation(ps);\n    });\n  }\n\n  useEffect(() => {\n    if (deviceLocation.length !== 0) {\n      fetchResults();\n    }\n  }, [deviceLocation]);\n\n  // gets location data for device\n  async function fetchResults() {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${deviceLocation[0]}&lon=${deviceLocation[1]}&appid=3069ae2718e40f8dc1998b7250e16f10&units=metric`,\n        myInit\n      );\n      if (!response.ok) {\n        throw new Error(\"bad network request\");\n      }\n      const data = await response.json();\n      setLocation(data);\n      setErrorLoading(false);\n      setIsLoading(false);\n    } catch (e) {\n      setIsLoading(false);\n      setErrorLoading(true);\n      console.error(e);\n    }\n  }\n\n  // gets location from input\n  async function getLocation(e) {\n    setIsLoading(true);\n    try {\n      const response = await fetch(myRequest(e.target.value));\n      if (!response.ok) {\n        throw new Error(\"bad network request\");\n      }\n      const data = await response.json();\n      setLocation(data);\n      e.target.value = \"\";\n      setIsLoading(false);\n      setErrorLoading(false);\n    } catch (e) {\n      setErrorLoading(true);\n      setIsLoading(false);\n      console.error(e);\n    }\n  }\n\n  // initial location\n  async function getInitialLocation() {\n    setIsLoading(true);\n    try {\n      const response = await fetch(api(\"london\"), myInit);\n      if (!response.ok) {\n        throw new Error(\"bad network request\");\n      }\n      const data = await response.json();\n      setErrorLoading(false);\n      setLocation(data);\n      setIsLoading(false);\n    } catch (e) {\n      setErrorLoading(true);\n      setIsLoading(false);\n      console.error(e);\n    }\n  }\n\n  useEffect(() => {\n    getInitialLocation();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"App\">\n        <Header\n          errorLoading={errorLoading}\n          getUserLocation={getUserLocation}\n          getLocation={getLocation}\n        />\n        {isLoading ? (\n          <p style={{ fontSize: \"40px\" }}>Loading ...</p>\n        ) : (\n          <div>\n            <LocationInfo degreeFormat={degreeFormat} location={location} />\n            <SwitchButton\n              toggleFormat={() => toggleFormat()}\n              degreeFormat={degreeFormat}\n            />\n            <p>{hour}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}